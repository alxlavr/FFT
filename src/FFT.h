/*!
 * \file FFT.h
 *
 * \brief     Файл процедур вычисления дискретного преобразования Фурье над входным массивом данных.
 * \details   Реализован алгоритм быстрого преобразования Фурье с возможностью использования линейной
 *            оконной функции для входных данных и вычисления модуля полученного комплексного числа.
 *            Программа позволяет получить значение мгновенного спектра сигнала из дискретных отсчетов,
 *            полученных с АЦП контроллеров.
 *
 * \version   1.0
 * \date      11.10.2021 11:36:09
 * \authors   Лаврентьев Алексей Игоревич
 *
 * \mainpage   Описание функции преобразования Фурье
 *
 * \section description Общее описание
 * _____________________________________________________________________________
 * Программа основано на математическом алгоритме быстрого вычисления преобразования Фурье
 * над массивом комплексного числа.
 *
 * Алгоритм основан на возможности упращения вычислений при длине массива `FFT_len` входных данных
 * кратной степени числа 2 `FFT_m` и использования конечного количества значений функций
 * `FFT_sin[]` и `FFT_cos[]`.
 *
 * Оконная функция представляет собой равнобедренную трапецию вида:
 * \code
 *        ***********
 *       *           *
 *      *             *
 *     *               *
 *    *                 *
 *   *                   *
 *  *                     *
 * \endcode
 *
 * \section function Описание функций преобразования Фурье
 * _____________________________________________________________________________
 * Для вычисления преобразования Фурье используются следующие функции:
 * - функция `FFT_init()` - функция инициализации преобразования. Входные данные
 *   функция задают длину массива входных данных и частоту дискретизации.
 * - функция `FFT_window_Line()` - функция подготовки данных во времени
 *   взвешивающей оконной линейной функцией.
 * - функция `FFT_math()` - функция производит вычисление преобразования.
 * - функция `FFT_mod()` - функция осуществляет нахождение модуля комплексного
 *   числа, полученого при преобразовании Фурье.
 * - функция `FFT_current_frequency()` - функция возвращает значение частоты отсчета,
 *   полученного при вычислении спетра сигнала.
 *
 * \section example Пример использования
 * _____________________________________________________________________________
 * Для вычисления понадобятся следующие данные:
 * - массивы отсчетов комплексных коэффициентов - `REX[]`, `IMX[]`;
 * - длина массива отсчетов `fft_len` кратная степени числа 2 (4, 8, 16, 32 и т.д.);
 * - количество отсчетов для получения линейной оконной функции
 *   `win_len` - длину бедер оконной функции.
 * - частота дискретизации отсчетов `freq`.
 *
 * Выходные данные будут записываться в массив амплитуд спектра `MODX`.
 *
 * Вычисление осуществляется следующим образом.
 * \code
 *  FFT_init(fft_len, freq);
 *  FFT_window_Line(REX, IMX, win_len);
 *  FFT_math(REX, IMX);
 *  FFT_mod(REX, IMX, MODX);
 * \endcode
 *
 * \section author Автор
 * _____________________________________________________________________________________________
 *
 * Лаврентьев Алексей Игоревич.
 *
 * 11.10.2021
 *
 */

#ifndef FFT_H_INCLUDED
#define FFT_H_INCLUDED

#include <stdint.h>

void FFT_init(uint16_t fft_len, uint16_t freq);
void FFT_math(int16_t *REX, int16_t *IMG);
void FFT_window_Line(int16_t *REX, int16_t *IMX, uint16_t line_len);
void FFT_mod(int16_t *REX, int16_t *IMX, uint16_t *MODX);
uint16_t FFT_current_frequency(uint16_t i);

#endif // FFT_H_INCLUDED
